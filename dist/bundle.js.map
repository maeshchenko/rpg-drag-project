{"version":3,"file":"bundle.js","mappings":"yBAGIA,EACAC,EAUAC,EACAC,E,mcAVEC,EAAW,UAEXC,EAAc,GA+BpB,SAASC,IAiBPL,EAAIM,UAAYH,EAChBH,EAAIO,SACFH,EACAA,EACAL,EAAOS,MAAQJ,GACfL,EAAOU,OAASL,IAXlBH,EAAOS,OACPR,EAAOQ,OAPPC,OAAOC,sBAAsBP,EAC/B,CAhCAM,OAAOE,OAKP,WACEd,EAASe,SAASC,eAAe,WACjCf,EAAMD,EAAOiB,WAAW,OACpBV,UAde,UAenBN,EAAIO,SAAS,EAAG,EAAGR,EAAOS,MAAOT,EAAOU,QAExCT,EAAIM,UAAYH,EAChBH,EAAIO,SACFH,EACAA,EACAL,EAAOS,MAAQJ,GACfL,EAAOU,OAASL,IAGlBH,EAAS,IAAIgB,EAtBM,WAuBnBf,EAAS,IAAIgB,EAtBM,WAyBnBP,OAAOC,sBAAsBP,EAC/B,EA4BA,iBACE,WACUc,EACAC,EACAC,EACAC,EACAC,QADA,IAAAD,IAAAA,EAAA,SACA,IAAAC,IAAAA,EAAA,IAJA,KAAAJ,MAAAA,EACA,KAAAC,OAAAA,EACA,KAAAC,OAAAA,EACA,KAAAC,MAAAA,EACA,KAAAC,MAAAA,EAERC,QAAQC,IAAI,6BACZD,QAAQC,IAAI,gBAAiBC,KAAKP,MACpC,CAoCF,OAnCE,YAAAQ,SAAA,WACE,MAAO,CAAEC,EAAGF,KAAKN,OAAQS,EAAGH,KAAKL,OACnC,EACA,YAAAX,KAAA,WACEV,EAAIM,UAAYoB,KAAKP,MACrBnB,EAAIO,SAASmB,KAAKN,OAAQM,KAAKL,OAAQK,KAAKJ,MAAOI,KAAKH,MAC1D,EACA,YAAAO,MAAA,SAAMC,GAEFL,KAAKN,OAASW,EAAKhC,EAAOS,MAAQJ,GAAkBsB,KAAKJ,MAAQ,GACjEI,KAAKN,OAASW,EAAK3B,IAEnBsB,KAAKN,QAAUW,EAEnB,EACA,YAAAC,MAAA,SAAMC,GAEFP,KAAKL,OAASY,EAAKlC,EAAOU,OAASL,GAAkBsB,KAAKH,MAAQ,GAClEG,KAAKL,OAASY,EAAK7B,IAEnBsB,KAAKL,QAAUY,EAEnB,EACA,YAAAC,OAAA,WACER,KAAKM,OAAO,GACd,EACA,YAAAG,SAAA,WACET,KAAKM,MAAM,GACb,EACA,YAAAI,SAAA,WACEV,KAAKI,OAAO,GACd,EACA,YAAAO,UAAA,WACEX,KAAKI,MAAM,GACb,EACF,EA9CA,GAgDA,cACE,WAAYX,GAAZ,MACE,YAAMA,EAAOpB,EAAOS,MAAQ,EAAGT,EAAOU,OAASL,GAAkB,KAAG,K,OACpEoB,QAAQC,IAAI,wB,CACd,CACF,OALqB,OAKrB,EALA,CAAqBa,GAOrB,cACE,WAAYnB,GAAZ,MACE,YAAMA,EAAOf,EAAaA,IAAY,K,OACtCoB,QAAQC,IAAI,wB,CACd,CACF,OALqB,OAKrB,EALA,CAAqBa,GAOrBxB,SAASyB,iBAAiB,YAAY,SAACC,GACrChB,QAAQC,IAAIe,EAAEC,MACC,SAAXD,EAAEC,MACJxC,EAAOiC,SAEM,SAAXM,EAAEC,MACJxC,EAAOkC,WAEM,SAAXK,EAAEC,MACJxC,EAAOmC,WAEM,SAAXI,EAAEC,MACJxC,EAAOoC,WAEX,G","sources":["webpack://rpg-drag-project/./src/index.ts"],"sourcesContent":["// import { Inventory } from \"./components/inventory/inventory\";\nimport \"./styles.scss\";\n\nlet canvas: HTMLCanvasElement;\nlet ctx: CanvasRenderingContext2D;\nconst BG_COLOR = \"#282828\";\nconst BORDER_COLOR = \"#000000\";\nconst BORDER_SIZE = 10;\n\nconst PLAYER_COLOR = \"#9ccc9c\";\nconst SELLER_COLOR = \"#2b5329\";\n\nwindow.onload = init;\n\nlet player: Player;\nlet seller: Player;\n\nfunction init() {\n  canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n  ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n  ctx.fillStyle = BORDER_COLOR;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  ctx.fillStyle = BG_COLOR;\n  ctx.fillRect(\n    BORDER_SIZE,\n    BORDER_SIZE,\n    canvas.width - BORDER_SIZE * 2,\n    canvas.height - BORDER_SIZE * 2\n  );\n\n  player = new Player(PLAYER_COLOR);\n  seller = new Seller(SELLER_COLOR);\n\n  // Start the first frame request\n  window.requestAnimationFrame(gameLoop);\n}\n\nfunction gameLoop() {\n  clear();\n  draw();\n\n  // Keep requesting new frames\n  window.requestAnimationFrame(gameLoop);\n}\n\nfunction draw() {\n  // console.log(\"drawing\");\n\n  player.draw();\n  seller.draw();\n}\n\nfunction clear() {\n  // console.log(\"clearing\");\n  ctx.fillStyle = BG_COLOR;\n  ctx.fillRect(\n    BORDER_SIZE,\n    BORDER_SIZE,\n    canvas.width - BORDER_SIZE * 2,\n    canvas.height - BORDER_SIZE * 2\n  );\n}\n\nclass Person {\n  constructor(\n    private color: string,\n    private xCoord: number,\n    private yCoord: number,\n    private sizeX = 20,\n    private sizeY = 30\n  ) {\n    console.log(\"Person class is initiated\");\n    console.log(\"My color is: \", this.color);\n  }\n  getCoord() {\n    return { x: this.xCoord, y: this.yCoord };\n  }\n  draw() {\n    ctx.fillStyle = this.color;\n    ctx.fillRect(this.xCoord, this.yCoord, this.sizeX, this.sizeY);\n  }\n  moveX(dx: number) {\n    if (\n      this.xCoord + dx < canvas.width - BORDER_SIZE * 2 - this.sizeX / 2 &&\n      this.xCoord + dx > BORDER_SIZE\n    ) {\n      this.xCoord += dx;\n    }\n  }\n  moveY(dy: number) {\n    if (\n      this.yCoord + dy < canvas.height - BORDER_SIZE * 2 - this.sizeY / 2 &&\n      this.yCoord + dy > BORDER_SIZE\n    ) {\n      this.yCoord += dy;\n    }\n  }\n  moveUp() {\n    this.moveY(-10);\n  }\n  moveDown() {\n    this.moveY(10);\n  }\n  moveLeft() {\n    this.moveX(-10);\n  }\n  moveRight() {\n    this.moveX(10);\n  }\n}\n\nclass Player extends Person {\n  constructor(color: string) {\n    super(color, canvas.width / 2, canvas.height - BORDER_SIZE * 2 - 20);\n    console.log(\"Player is initiated.\");\n  }\n}\n\nclass Seller extends Person {\n  constructor(color: string) {\n    super(color, BORDER_SIZE, BORDER_SIZE);\n    console.log(\"Seller is initiated.\");\n  }\n}\n\ndocument.addEventListener(\"keypress\", (e: KeyboardEvent) => {\n  console.log(e.code);\n  if (e.code === \"KeyW\") {\n    player.moveUp();\n  }\n  if (e.code === \"KeyS\") {\n    player.moveDown();\n  }\n  if (e.code === \"KeyA\") {\n    player.moveLeft();\n  }\n  if (e.code === \"KeyD\") {\n    player.moveRight();\n  }\n});\n"],"names":["canvas","ctx","player","seller","BG_COLOR","BORDER_SIZE","gameLoop","fillStyle","fillRect","width","height","draw","window","requestAnimationFrame","onload","document","getElementById","getContext","Player","Seller","color","xCoord","yCoord","sizeX","sizeY","console","log","this","getCoord","x","y","moveX","dx","moveY","dy","moveUp","moveDown","moveLeft","moveRight","Person","addEventListener","e","code"],"sourceRoot":""}